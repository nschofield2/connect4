{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noah\\\\Desktop\\\\SE3316\\\\SE3316-react\\\\3316-react\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell({\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cell\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Cell;\n\nfunction GameBoard() {\n  _s();\n\n  const [cells, setCell] = useState(Array(42).fill(null));\n  const [isBlueTurn, setBlueTurn] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(0), renderCell(1), renderCell(2), renderCell(3), renderCell(4), renderCell(5), renderCell(6)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(7), renderCell(8), renderCell(9), renderCell(10), renderCell(11), renderCell(12), renderCell(13)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(14), renderCell(15), renderCell(16), renderCell(17), renderCell(18), renderCell(19), renderCell(20)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(21), renderCell(22), renderCell(23), renderCell(24), renderCell(25), renderCell(26), renderCell(27)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(28), renderCell(29), renderCell(30), renderCell(31), renderCell(32), renderCell(33), renderCell(34)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderCell(35), renderCell(36), renderCell(37), renderCell(38), renderCell(39), renderCell(40), renderCell(41)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n\n  function renderCell(val) {\n    return /*#__PURE__*/_jsxDEV(Cell, {\n      value: cells[val],\n      onClick: () => {\n        const duplicateCells = cells.slice();\n        duplicateCells[val] = isBlueTurn ? 'X' : 'O';\n        setCell(duplicateCells);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(GameBoard, \"fScXTBIkeLB5mcPLHA2AekYHB48=\");\n\n_c2 = GameBoard;\nReactDOM.render( /*#__PURE__*/_jsxDEV(GameBoard, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"GameBoard\");","map":{"version":3,"sources":["C:/Users/Noah/Desktop/SE3316/SE3316-react/3316-react/src/index.js"],"names":["React","useEffect","useState","ReactDOM","Cell","value","onClick","GameBoard","cells","setCell","Array","fill","isBlueTurn","setBlueTurn","renderCell","val","duplicateCells","slice","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Cell({value, onClick}) {\n  return (\n      <button className=\"cell\" onClick={onClick}>\n        {value}\n      </button>\n  )\n}\n\nfunction GameBoard () {\n  const[cells, setCell] = useState(Array(42).fill(null));\n  const[isBlueTurn, setBlueTurn] = useState(true);\n\n    return (\n      <div>\n        <div>\n          {renderCell(0)}\n          {renderCell(1)}\n          {renderCell(2)}\n          {renderCell(3)}\n          {renderCell(4)}\n          {renderCell(5)}\n          {renderCell(6)}\n        </div>\n        <div>\n          {renderCell(7)}\n          {renderCell(8)}\n          {renderCell(9)}\n          {renderCell(10)}\n          {renderCell(11)}\n          {renderCell(12)}\n          {renderCell(13)}\n        </div>\n        <div>\n          {renderCell(14)}\n          {renderCell(15)}\n          {renderCell(16)}\n          {renderCell(17)}\n          {renderCell(18)}\n          {renderCell(19)}\n          {renderCell(20)}\n        </div>\n        <div>\n          {renderCell(21)}\n          {renderCell(22)}\n          {renderCell(23)}\n          {renderCell(24)}\n          {renderCell(25)}\n          {renderCell(26)}\n          {renderCell(27)}\n        </div>\n        <div>\n          {renderCell(28)}\n          {renderCell(29)}\n          {renderCell(30)}\n          {renderCell(31)}\n          {renderCell(32)}\n          {renderCell(33)}\n          {renderCell(34)}\n        </div>\n        <div>\n          {renderCell(35)}\n          {renderCell(36)}\n          {renderCell(37)}\n          {renderCell(38)}\n          {renderCell(39)}\n          {renderCell(40)}\n          {renderCell(41)}\n        </div>\n      </div>\n    )\n\n    function renderCell(val) {\n      return (\n        <Cell value = {cells[val]} onClick={() => {\n          const duplicateCells = cells.slice();\n          duplicateCells[val] = isBlueTurn ? 'X' : 'O';\n          setCell(duplicateCells);\n        }}/>\n      )\n    }\n}\n\nReactDOM.render(\n    <GameBoard/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}